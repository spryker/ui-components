dist: trusty
language: node_js
node_js: lts/*
cache:
  npm: true
stages:
  - name: test-branch
    if: branch NOT IN (master, next)
  - name: test-next
    if: branch = next
  - name: test-master
    if: branch = master
  - name: deploy
    if: branch IN (master, next)
before_script:
  # Configure Git to fetch all branches and fetch master
  - git config --replace-all remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
  - git fetch origin master:remotes/origin/master
  - git fetch origin next:remotes/origin/next
jobs:
  include:
    - stage: test-branch
      script:
        - npm run format:check
        - npm run affected:lint -- --base=remotes/origin/next
        - COVERAGE=true npm run affected:test -- --base=remotes/origin/next
        - npm run affected:build -- --base=remotes/origin/next
        - npm run build-non-libs
    - stage: test-next
      script:
        - npm run format:check
        - npm run affected:lint -- --base=remotes/origin/master
        - COVERAGE=true npm run affected:test -- --base=remotes/origin/master
    - stage: test-master
      script:
        - npm run format:check
        - npm run lint
        - COVERAGE=true npm run test:ci
    - stage: deploy
      script:
        - npm run build
      before_deploy:
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        - git remote add -f pub https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
        - git fetch pub $TRAVIS_BRANCH
        - git checkout $TRAVIS_BRANCH
      after_deploy:
        - npx lerna exec -- cat ./dist/package.json
      deploy:
        - provider: script
          script: npm run release
          skip_cleanup: true
          keep_history: true
          on:
            tags: false
            condition: branch IN (master)
        - provider: script
          script: npm run release-tag
          skip_cleanup: true
          keep_history: true
          on:
            tags: false
            condition: branch NOT IN (master)
