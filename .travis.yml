dist: focal
language: node_js
node_js: 18
cache:
    npm: true
stages:
    - name: test-branch
      if: branch NOT IN (master, next)
    - name: test-next
      if: branch = next
    - name: test-master
      if: branch = master
    - name: deploy
      if: branch IN (master, next, beta, alpha, rc) OR branch =~ /^republish\/.*$/
before_script:
    # Configure Git to fetch all branches and fetch master
    - git config --replace-all remote.origin.fetch +refs/heads/*:refs/remotes/origin/*
jobs:
    include:
        - stage: test-branch
          name: 'Format check'
          script:
              - git fetch origin next
              - npm run format:check -- --base=origin/next
        - name: 'Lint code'
          script:
              - git fetch origin next
              - npm run affected:lint -- --base=origin/next --parallel || npm run affected:lint -- --all --parallel
              - npm run stylelint
        - name: 'Unit Tests'
          script:
              - git fetch origin next
              - COVERAGE=true npm run affected:test -- --base=origin/next --parallel || npm run affected:test -- --all --parallel
        - name: 'Build'
          script:
              - git fetch origin next
              - npm run build-non-libs
              - npm run affected:build -- --base=origin/next --parallel || npm run affected:build -- --all --parallel

        - stage: test-next
          name: 'Format check'
          script:
              - git fetch origin master
              - npm run format:check -- --base=origin/master
        - name: 'Lint code'
          script:
              - git fetch origin master
              - npm run affected:lint -- --base=origin/master --parallel || npm run affected:lint -- --all --parallel
              - npm run stylelint
        - name: 'Unit Tests'
          script:
              - git fetch origin master
              - COVERAGE=true npm run affected:test -- --base=origin/master --parallel || npm run affected:test -- --all --parallel

        - stage: test-master
          name: 'Format check'
          script:
              - npm run format:check
        - name: 'Lint code'
          script:
              - npm run affected:lint -- --all --parallel
              - npm run stylelint
        - name: 'Unit Tests'
          script:
              - COVERAGE=true npm run affected:test -- --all --parallel

        - stage: deploy
          script:
              - npm run build
          before_deploy:
              - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
              - git remote add -f pub https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git
              - git fetch pub $TRAVIS_BRANCH
              - git checkout $TRAVIS_BRANCH
          deploy:
              - provider: script
                edge: true
                script: npm run release
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(master)$'
              - provider: script
                edge: true
                script: npm run release from-package
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(republish/master)$'
              - provider: script
                edge: true
                script: npm run release-next
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(next)$'
              - provider: script
                edge: true
                script: npm run release-next from-package
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(republish/next)$'
              - provider: script
                edge: true
                script: npm run release-tag
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(beta)$'
              - provider: script
                edge: true
                script: npm run release-tag from-package
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(republish/beta)$'
              - provider: script
                edge: true
                script: npm run release-tag
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(alpha)$'
              - provider: script
                edge: true
                script: npm run release-tag from-package
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(republish/alpha)$'
              - provider: script
                edge: true
                script: npm run release-tag
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(rc)$'
              - provider: script
                edge: true
                script: npm run release-tag from-package
                on:
                    tags: false
                    all_branches: true
                    condition: '$TRAVIS_BRANCH =~ ^(republish/rc)$'
