- pipeline: 'Format check / Lint code / Unit Tests / Build (not releasable branches)'
  events:
      - type: 'PUSH'
        refs:
            - '(^((?!(master|next|(\d+))$).)*$)'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  resources: 'LARGE'
  actions:
      - action: 'Format check'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'git fetch origin next'
            - 'npm ci'
            - 'npm run format:check -- --base=origin/next'
        shell: 'BASH'
      - action: 'Lint code'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run affected:lint -- --base=origin/next --parallel || npm run affected:lint -- --parallel'
            - 'npm run stylelint'
        shell: 'BASH'
      - action: 'Unit Tests'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'COVERAGE=true npm run affected:test -- --base=origin/next --parallel || npm run affected:test -- --parallel'
        shell: 'BASH'
      - action: 'Build'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'git fetch origin next'
            - 'npm run build-non-libs'
            - 'npm run affected:build -- --base=origin/next --parallel || npm run affected:build -- --parallel'
        shell: 'BASH'
      - action: 'Trigger Deploy pipeline'
        type: 'RUN_NEXT_PIPELINE'
        clear_cache: true
        comment: 'Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID'
        priority: 'NORMAL'
        revision: 'INHERIT'
        next_project_name: 'ui-components'
        next_pipeline_name: 'Deploy'
- pipeline: 'Format check / Lint code / Unit Tests / Build (next)'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/heads/next'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  resources: 'NANO'
  actions:
      - action: 'Format check'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'git fetch origin master'
            - 'npm ci'
            - 'npm run format:check -- --base=origin/master'
        shell: 'BASH'
      - action: 'Lint code'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run affected:lint -- --base=origin/master --parallel || npm run affected:lint -- --parallel'
            - 'npm run stylelint'
        shell: 'BASH'
      - action: 'Unit Tests'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'COVERAGE=true npm run affected:test -- --base=origin/master --parallel || npm run affected:test -- --parallel'
        shell: 'BASH'
      - action: 'Trigger Deploy Pipeline'
        type: 'RUN_NEXT_PIPELINE'
        clear_cache: true
        comment: 'Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID'
        priority: 'NORMAL'
        revision: 'INHERIT'
        next_project_name: 'ui-components'
        next_pipeline_name: 'Deploy'
- pipeline: 'Format check / Lint code / Unit Tests / Build (master)'
  events:
      - type: 'PUSH'
        refs:
            - 'refs/heads/master'
  terminate_stale_runs: true
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  resources: 'NANO'
  actions:
      - action: 'Format check'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm ci'
            - 'npm run format:check'
        shell: 'BASH'
      - action: 'Lint code'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run affected:lint -- --parallel'
            - 'npm run stylelint'
        shell: 'BASH'
      - action: 'Unit Tests'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'COVERAGE=true npm run affected:test -- --parallel'
        shell: 'BASH'
      - action: 'Trigger Deploy pipeline'
        type: 'RUN_NEXT_PIPELINE'
        clear_cache: true
        comment: 'Triggered by $BUDDY_PIPELINE_NAME execution #$BUDDY_EXECUTION_ID'
        priority: 'NORMAL'
        revision: 'INHERIT'
        next_project_name: 'ui-components'
        next_pipeline_name: 'Deploy'
- pipeline: 'Deploy'
  on: 'CLICK'
  refs:
      - 'refs/heads/master'
      - 'refs/heads/republish/master'
      - 'refs/heads/next'
      - 'refs/heads/republish/next'
      - 'refs/heads/alpha'
      - 'refs/heads/beta'
      - 'refs/heads/rc'
      - 'refs/heads/republish/alpha'
      - 'refs/heads/republish/beta'
      - 'refs/heads/republish/rc'
  auto_clear_cache: true
  fail_on_prepare_env_warning: true
  resources: 'LARGE'
  actions:
      - action: 'Prepare'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'export GH_TOKEN=${GH_TOKEN}'
            - 'git config --replace-all remote.origin.fetch +refs/heads/*:refs/remotes/origin/*'
            - 'echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc'
            - 'git remote add -f pub https://${GH_TOKEN}@github.com/${BUDDY_REPO_SLUG}.git'
            - 'git fetch pub $BUDDY_EXECUTION_BRANCH'
            - 'git checkout $BUDDY_EXECUTION_BRANCH'
        shell: 'BASH'
      - action: 'npm run release'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_value: 'master'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-master)'
      - action: 'npm run release from-package'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release from-package'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_value: 'republish/master'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-branch)'
      - action: 'npm run release-next'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release-next'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_value: 'next'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-next)'
      - action: 'npm run release-next from-package'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release-next from-package'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'VAR_IS'
              trigger_variable_value: 'republish/next'
              trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-branch)'
      - action: 'npm run release-tag'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release-tag'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'OR'
              trigger_operands:
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'alpha'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'beta'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'rc'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-branch)'
      - action: 'npm run release-tag from-package'
        type: 'BUILD'
        docker_image_name: 'library/node'
        docker_image_tag: '18.13.0'
        execute_commands:
            - 'npm run release-tag from-package'
        shell: 'BASH'
        trigger_conditions:
            - trigger_condition: 'OR'
              trigger_operands:
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'republish/beta'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'republish/alpha'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
                  - trigger_condition: 'VAR_IS'
                    trigger_variable_value: 'republish/rc'
                    trigger_variable_key: 'BUDDY_EXECUTION_BRANCH'
            - trigger_condition: 'SUCCESS_PIPELINE'
              trigger_project_name: 'ui-components'
              trigger_pipeline_name: 'Format check / Lint code / Unit Tests / Build (test-branch)'
